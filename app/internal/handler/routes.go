// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	todo "TodoList/app/internal/handler/todo"
	user "TodoList/app/internal/handler/user"
	"TodoList/app/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/pass",
				Handler: user.LoginPassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/captcha",
				Handler: user.LoginEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/captcha",
				Handler: user.SendCaptchaHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPut,
				Path:    "/password",
				Handler: user.ChangePwdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/user/name",
				Handler: user.ChangeUserNameHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/todo",
				Handler: todo.AddTodoHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/todo",
				Handler: todo.UpdateTodoHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/todo",
				Handler: todo.CompleteTodoHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/todo",
				Handler: todo.DelTodoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/todo",
				Handler: todo.QueryTodoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)
}
